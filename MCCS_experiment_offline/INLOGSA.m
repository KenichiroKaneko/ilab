function [GW,HW] = INLOGSA(XS,YS,XG1,YG1,XG2,YG2,XG3,YG3,NODO)
GW = zeros(1,3);
HW = zeros(1,3);
%//// 通常のGauss積分用のデータ/////////////////////////////////////////
     GI  =    [ +0.9894009349D0,-0.9894009349D0,+0.9445750230D0,...
                -0.9445750230D0,+0.8656312023D0,-0.8656312023D0,...
                +0.7554044083D0,-0.7554044083D0,+0.6178762444D0,...
                -0.6178762444D0,+0.4580167776D0,-0.4580167776D0,...
                +0.2816035507D0,-0.2816035507D0,+0.0950125098D0,...
                -0.0950125098D0];                                          
%
     OME =    [ +0.0271524594D0,+0.0271524594D0,+0.0622535239D0,...
                 +0.0622535239D0,+0.0951585116D0,+0.0951585116D0,...
                 +0.1246289712D0,+0.1246289712D0,+0.1495959888D0,...
                 +0.1495959888D0,+0.1691565193D0,+0.1691565193D0,...
                 +0.1826034150D0,+0.1826034150D0,+0.1894506104D0,...
                 +0.1894506104D0];                                         
%///////////////////////////////////////////////////////////////////////    
PI2 = 2.0D0*pi;
%-----------------------------------------------------------------------
%! 対数Gauss積分を用いて対数特異性のある部分を計算

    [GWLA,HWLA] = INLOGSB(XS,XG1,YG1,XG2,YG2,XG3,YG3,NODO); % OK
%-----------------------------------------------------------------------
%! JACOBIANの中身の計算
%! J=[{(X3-2*X2+X1)ξ+(X3-X1)/2}^2+{(Y3-2*Y2+Y1)ξ+(Y3-Y1)}^2]^0.5
%!        A              B             C              D
%
	A = XG3-2.D0.*XG2+XG1;
	B = (XG3-XG1)./2.D0;
	C = YG3-2.D0.*YG2+YG1;
	D = (YG3-YG1)./2.D0;
%-----------------------------------------------------------------------
	    DELTA1 = zeros(1,16);
	    DELTA2 = zeros(1,16);
	    DELTA3 = zeros(1,16);
	    ZETA1 = zeros(1,16); 
        ZETA2 = zeros(1,16);
	    ZETA3 = zeros(1,16); 
        XCO = zeros(1,16);
	    YCO = zeros(1,16);
	    XJA = zeros(1,16);
	    RNOR = zeros(1,16);
        ZNOR = zeros(1,16);
   	    RA = zeros(1,16);
	    GSTO = zeros(1,16);	
        EX = zeros(1,16);
        EY = zeros(1,16);
	    XJA2 = zeros(1,16);
	    RNOR2 = zeros(1,16);
	    HSTO = zeros(1,16);
        GSTAR = zeros(1,16);
        HSTAR = zeros(1,16);
        %-----------------------------------------------------------------------
%        ! 形状関数δの計算
%        ! DELTA1:δ1=ξ(ξ-1)/2
%        ! DELTA2:δ2=1-ξ^2
%        ! DELTA3:δ3=ξ(ξ+1)/2
        %
	    DELTA1(1:16) = 0.5D0.*GI(1:16).*(GI(1:16)-1);
	    DELTA2(1:16) = 1-GI(1:16).^2;
	    DELTA3(1:16) = 0.5D0.*GI(1:16).*(GI(1:16)+1);
        %-----------------------------------------------------------------------
%        ! 内挿関数ζの計算
%        ! ZETA1:ζ1=(3/4)ξ((3/2)ξ-1) 
%        ! ZETA2:ζ2=(1-(3/2)ξ)*(1+(3/2)ξ)
%        ! ZETA3:ζ3=(3/4)ξ((3/2)ξ+1) 
        %
	    ZETA1(1:16) = 0.75D0.*GI(1:16).*(1.5D0.*GI(1:16)-1); 
        ZETA2(1:16) = (1-1.5D0.*GI(1:16)).*(1+1.5D0.*GI(1:16));
	    ZETA3(1:16) = 0.75D0.*GI(1:16).*(1.5D0.*GI(1:16)+1); 
        %-----------------------------------------------------------------------
%        ! XCO,YCO:積分点
        %
        XCO(1:16) = XG1.*DELTA1(1:16)+XG2.*DELTA2(1:16)+XG3.*DELTA3(1:16);
	    YCO(1:16) = YG1.*DELTA1(1:16)+YG2.*DELTA2(1:16)+YG3.*DELTA3(1:16);
	    XJA(1:16) = sqrt((GI(1:16).*A+B).^2+(GI(1:16).*C+D).^2);
	    RNOR(1:16) = (GI(1:16).*C+D)./XJA(1:16);
        ZNOR(1:16) = -(GI(1:16).*A+B)./XJA(1:16);
%
   	    RA(1:16) = sqrt((XCO(1:16)-XS).^2+(YCO(1:16)-YS).^2);
	    GSTO(1:16) = -log(RA)./PI2;	
%-----------------------------------------------------------------------
%        ! ξs(ソース点の位置)が-2/3,0,+2/3の場合に分けて計算
%
        if (NODO == 1)	    
%-----------------------------------------------------------------------
%            ! ξs(ソース点の位置)が-2/3の場合
%
            EX(1:16) = -(XG3-8.D0.*XG2+7.D0.*XG1)./6.D0;
    	    EY(1:16) = -(YG3-8.D0.*YG2+7.D0.*YG1)./6.D0;
	        XJA2(1:16) = sqrt(EX(1:16).^2+EY(1:16).^2);
	        RNOR2(1:16) = EY(1:16)./XJA2(1:16);
%-----------------------------------------------------------------------
%            ! ξs(ソース点の位置)が0の場合
%
        elseif (NODO == 2)
            EX(1:16) = 0.5D0.*(XG3-XG1);
	        EY(1:16) = 0.5D0.*(YG3-YG1);
	        XJA2(1:16) = sqrt(EX(1:16).^2+EY(1:16).^2);
	        RNOR2(1:16) = EY(1:16)./XJA2(1:16);
%-----------------------------------------------------------------------
%            ! ξs(ソース点の位置)が+2/3の場合
%
        elseif (NODO == 3)
            EX(1:16) = (7.D0.*XG3-8.D0.*XG2+XG1)./6.D0;
	        EY(1:16) = (7.D0.*YG3-8.D0.*YG2+YG1)./6.D0;
	        XJA2(1:16) = sqrt(EX(1:16).^2+EY(1:16).^2);
	        RNOR2(1:16) = EY(1:16)./XJA2(1:16);
        end
	    HSTO(1:16) = GSTO(1:16).*RNOR2(1:16)./(XS.*2.D0);
%-----------------------------------------------------------------------
%        ! 楕円積分の計算

%!	   CALL STARB(0,XS,YS,XCO,YCO,RNOR,ZNOR,GSTAR,HSTAR,
%!     &	          DAG,DBG,DAH,DBH)                                !  入れ替え
        [PHI,PHIR,PHIZ,PHIA,PHIB,PIRA,PIRB,PIZA,PIZB,GSTAR(1:16),HSTAR(1:16),DAG,DBG,DAH,...
        DBH] = STARB(0,XS,YS,XCO(1:16),YCO(1:16),RNOR(1:16),ZNOR(1:16));% OK
%-----------------------------------------------------------------------
	    GW(1) = GW(1)+sum((GSTAR(1:16)-GSTO(1:16)).*ZETA1(1:16).*OME(1:16).*XJA(1:16));
	    GW(2) = GW(2)+sum((GSTAR(1:16)-GSTO(1:16)).*ZETA2(1:16).*OME(1:16).*XJA(1:16));
	    GW(3) = GW(3)+sum((GSTAR(1:16)-GSTO(1:16)).*ZETA3(1:16).*OME(1:16).*XJA(1:16));
% 
        HW(1) = HW(1)+sum((HSTAR(1:16)-HSTO(1:16)).*ZETA1(1:16).*OME(1:16).*XJA(1:16));
	    HW(2) = HW(2)+sum((HSTAR(1:16)-HSTO(1:16)).*ZETA2(1:16).*OME(1:16).*XJA(1:16));
	    HW(3) = HW(3)+sum((HSTAR(1:16)-HSTO(1:16)).*ZETA3(1:16).*OME(1:16).*XJA(1:16));
%-----------------------------------------------------------------------
%    ! 特異性のある部分と足し合わせる。
%	
	    GW(1:3) = GW(1:3)+GWLA(1:3);
	    HW(1:3) = HW(1:3)+HWLA(1:3);